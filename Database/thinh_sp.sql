CREATE OR ALTER PROC SP_GET_DATATABLE_LICHHEN
	@FILTERQUERY NVARCHAR(MAX),
	@COLNAME NVARCHAR(MAX),
	@COLSORTORDER NVARCHAR(MAX),
	@OFFSET_START NVARCHAR(MAX),
	@LENGTH NVARCHAR(MAX),
	@KHACHHANGCHECK Int
AS
BEGIN
	IF (@KHACHHANGCHECK = 0)
	BEGIN
	DECLARE @SQL NVARCHAR(MAX) = N'SELECT COUNT(*) recordsTotal FROM LICHHEN '
	EXEC SP_EXECUTESQL @SQL
	
	SET @SQL = @SQL + @FILTERQUERY
	EXEC SP_EXECUTESQL @SQL

	SET @SQL = 'SELECT * FROM LICHHEN ' + @FILTERQUERY +
                    ' ORDER BY ' + @COLNAME + ' ' + @COLSORTORDER +
                    ' OFFSET ' + @OFFSET_START + ' ROWS FETCH NEXT ' + @LENGTH + ' ROWS ONLY;';
	EXEC SP_EXECUTESQL @SQL
	END
	IF (@KHACHHANGCHECK != 0)
	BEGIN
	DECLARE @SQL2 NVARCHAR(MAX) = N'SELECT COUNT(*) recordsTotal FROM LICHHEN '
	EXEC SP_EXECUTESQL @SQL2
	DECLARE @SQL3 NVARCHAR(MAX) = N'WITH LICHHEN2 AS (
    SELECT LH.MALH AS MALH, LH.MANS AS MANS, LH.MAHSBN AS MAHSBN, LH.HOTENBN AS HOTENBN, LH.SDTBN AS SDTBN,
        LH.HOTENNS AS HOTENNS, LH.NGAYHEN AS NGAYHEN, LH.GIOHEN AS GIOHEN, LH.XACNHAN AS XACNHAN, LH.MATAIKHAM AS MATAIKHAM
    FROM LICHHEN LH
    JOIN HOSOBN BN ON LH.MAHSBN = BN.MAHSBN
    JOIN KHACHHANG KH ON BN.MAKH = KH.MAKH 
	WHERE KH.MAKH =' + CONVERT(NVARCHAR(max), @KHACHHANGCHECK) 
	--EXEC SP_EXECUTESQL @SQL3
	DECLARE @SQL4 NVARCHAR(MAX)
	SET @SQL2 = @SQL3 +  @FILTERQUERY +' )SELECT COUNT(*) recordsTotal FROM LICHHEN2'
	EXEC SP_EXECUTESQL @SQL2

	SET @SQL3 = @SQL3 + @FILTERQUERY +')SELECT * FROM LICHHEN2'  +
                    ' ORDER BY ' + @COLNAME + ' ' + @COLSORTORDER +
                    ' OFFSET ' + @OFFSET_START + ' ROWS FETCH NEXT ' + @LENGTH + ' ROWS ONLY;';
	EXEC SP_EXECUTESQL @SQL3
	END
END
GO

CREATE OR ALTER PROC SP_POST_ACCEPT_LICHHEN
    @MaLH INT
AS
BEGIN
    BEGIN TRY
        UPDATE LICHHEN
        SET
            XACNHAN = 1
        WHERE MALH = @MaLH;

        -- Optional: Check if any rows were affected
        IF @@ROWCOUNT = 0
        BEGIN
            RAISERROR('No rows were updated.', 16, 1);
        END
    END TRY
    BEGIN CATCH
        RAISERROR('System error or foreign key violation!', 16, 1);
    END CATCH
END;
go
CREATE OR ALTER PROC SP_POST_DENY_LICHHEN
    @MaLH INT
AS
BEGIN
    BEGIN TRY
        DELETE FROM LICHHEN
        WHERE MALH = @MaLH;
    END TRY
    BEGIN CATCH
        RAISERROR('System error or foreign key violation!', 16, 1);
    END CATCH
END;
Go

CREATE OR ALTER PROC SP_UPDATE_APPOINMENT
	@MALH INT,
	@MACN INT,
	@MANS INT,
	@MAHSBN INT,
	@HOTENBN NVARCHAR(255),
	@SDTBN CHAR(10),
	@HOTENNS NVARCHAR(255),
	@NGAYHEN DATE,
	@GIOHENSTR VARCHAR(10)
AS
BEGIN
	DECLARE @DAYWEEK INT = DATEPART(WEEKDAY, @NGAYHEN)
	DECLARE @GIOHEN TIME = CONVERT(TIME, @GIOHENSTR)

	IF (@MANS IS NOT NULL)
	BEGIN 
		DECLARE @CHECKGIOHEN BIT = 0
		SELECT @CHECKGIOHEN = 1
		FROM LICHLAMVIEC
		WHERE MANS = @MANS
		AND NGAYLAM = @DAYWEEK
		AND @GIOHEN BETWEEN GIOBATDAU AND GIOKETTHUC
		IF (@CHECKGIOHEN = 0)
		BEGIN
			RAISERROR('Nha sĩ trên hiện không làm việc vào thời gian này!', 16, 1)
			RETURN
		END
		BEGIN TRY
				UPDATE LICHHEN
				SET 
				MANS = @MANS,
				HOTENNS = @HOTENNS,
				NGAYHEN = @NGAYHEN,
				GIOHEN = @GIOHENSTR,
				MAHSBN = @MAHSBN,
				HOTENBN = @HOTENBN,
				SDTBN = @SDTBN
				WHERE
				MALH = @MALH;
		END TRY
		BEGIN CATCH
			DECLARE @ErrorMessage NVARCHAR(MAX) = ERROR_MESSAGE();
			IF CHARINDEX('UQ__LICHHEN__7D8DD724B224CA39', @ErrorMessage) > 0
			BEGIN
				RAISERROR('Nha sĩ đã có lịch hẹn khác vào thời điểm này!', 16, 1)
			END
			ELSE IF CHARINDEX('UQ__LICHHEN__037060A64A4D59F5', @ErrorMessage) > 0
			BEGIN
				RAISERROR('Hồ sơ bệnh nhân đã có lịch hẹn khác vào thời điểm này!', 16, 1)
			END
			RETURN
		END CATCH
	END
	ELSE
	BEGIN
		SELECT TOP 1 @MANS = NS.MANS, @HOTENNS = NS.HOTEN
		FROM NHASI NS JOIN (
			SELECT *
			FROM LICHLAMVIEC
			WHERE NGAYLAM = @DAYWEEK
			AND @GIOHEN BETWEEN GIOBATDAU AND GIOKETTHUC
		) LLV ON NS.MANS = LLV.MANS
		WHERE NS.MACN = @MACN
		AND NOT EXISTS (
			SELECT 1
			FROM LICHHEN LH
			WHERE (LH.MANS = NS.MANS OR LH.MAHSBN = @MAHSBN)
			AND LH.NGAYHEN = @NGAYHEN
			AND LH.GIOHEN = @GIOHEN
		)

		IF (@MANS IS NOT NULL)
		BEGIN
			UPDATE LICHHEN
				SET 
				MANS = @MANS,
				HOTENNS = @HOTENNS,
				NGAYHEN = @NGAYHEN,
				GIOHEN = @GIOHENSTR,
				MAHSBN = @MAHSBN,
				HOTENBN = @HOTENBN,
				SDTBN = @SDTBN
				WHERE
				MALH = @MALH;
		END
		ELSE
		BEGIN
			RAISERROR('Hiện không có nha sĩ nào rảnh vào thời gian này!', 16, 1)
			RETURN
		END
	END
END
