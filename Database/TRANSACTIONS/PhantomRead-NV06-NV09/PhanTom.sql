
CREATE OR ALTER PROC SP_GET_DATATABLE_LICHHEN
	@FILTERQUERY NVARCHAR(MAX),
	@COLNAME NVARCHAR(MAX),
	@COLSORTORDER NVARCHAR(MAX),
	@OFFSET_START NVARCHAR(MAX),
	@LENGTH NVARCHAR(MAX),
	@KHACHHANGCHECK Int
AS
BEGIN TRAN
	BEGIN TRY
	IF (@KHACHHANGCHECK = 0)
	BEGIN
	DECLARE @SQL NVARCHAR(MAX) = N'SELECT COUNT(*) recordsTotal FROM LICHHEN '
	EXEC SP_EXECUTESQL @SQL
	
	SET @SQL = @SQL + @FILTERQUERY
	EXEC SP_EXECUTESQL @SQL
	WAITFOR DELAY '0:0:05'
	SET @SQL = 'SELECT * FROM LICHHEN ' + @FILTERQUERY +
                    ' ORDER BY ' + @COLNAME + ' ' + @COLSORTORDER +
                    ' OFFSET ' + @OFFSET_START + ' ROWS FETCH NEXT ' + @LENGTH + ' ROWS ONLY;';
	EXEC SP_EXECUTESQL @SQL
	END
	IF (@KHACHHANGCHECK != 0)
	BEGIN
	DECLARE @SQL2 NVARCHAR(MAX) = N'SELECT COUNT(*) recordsTotal FROM LICHHEN '
	EXEC SP_EXECUTESQL @SQL2
	DECLARE @SQL3 NVARCHAR(MAX) = N'WITH LICHHEN2 AS (
    SELECT LH.MALH AS MALH, LH.MANS AS MANS, LH.MAHSBN AS MAHSBN, LH.HOTENBN AS HOTENBN, LH.SDTBN AS SDTBN,
        LH.HOTENNS AS HOTENNS, LH.NGAYHEN AS NGAYHEN, LH.GIOHEN AS GIOHEN, LH.XACNHAN AS XACNHAN, LH.MATAIKHAM AS MATAIKHAM
    FROM LICHHEN LH
    JOIN HOSOBN BN ON LH.MAHSBN = BN.MAHSBN
    JOIN KHACHHANG KH ON BN.MAKH = KH.MAKH 
	WHERE KH.MAKH =' + CONVERT(NVARCHAR(max), @KHACHHANGCHECK) 

	SET @SQL2 = @SQL3 +  @FILTERQUERY +' )SELECT COUNT(*) recordsTotal FROM LICHHEN2'
	EXEC SP_EXECUTESQL @SQL2

	SET @SQL3 = @SQL3 + @FILTERQUERY +')SELECT * FROM LICHHEN2'  +
                    ' ORDER BY ' + @COLNAME + ' ' + @COLSORTORDER +
                    ' OFFSET ' + @OFFSET_START + ' ROWS FETCH NEXT ' + @LENGTH + ' ROWS ONLY;';
	EXEC SP_EXECUTESQL @SQL3
	END
	END TRY
	BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000);
		SET @ErrorMessage = ERROR_MESSAGE();
		RAISERROR(@ErrorMessage, 16, 1);
		ROLLBACK TRAN
		RETURN
    END CATCH
COMMIT TRAN
go
CREATE OR ALTER PROC SP_POST_DENY_LICHHEN
    @MALH INT
AS
BEGIN TRAN
	BEGIN TRY
	IF NOT EXISTS (SELECT 1 FROM LICHHEN  WHERE MALH = @MALH AND XACNHAN = 0)
	BEGIN
	RAISERROR('Error', 16, 1);
	ROLLBACK TRAN
	RETURN
	END
	DELETE FROM LICHHEN
		WHERE MALH = @MALH 
	END TRY
	BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000);
		SET @ErrorMessage = ERROR_MESSAGE();
		RAISERROR(@ErrorMessage, 16, 1);
		ROLLBACK TRAN
		RETURN
    END CATCH
COMMIT TRAN


