-- LOGIN
CREATE OR ALTER PROC SP_LOGIN_KHACHHANG
	@SDT CHAR(10),
	@MATKHAU VARCHAR(50),
	@LOAITK INT,
	@ID INT = NULL OUTPUT,
	@HOTEN NVARCHAR(255) = NULL OUTPUT,
	@LOAINV BIT = NULL OUTPUT
AS
BEGIN
	IF @LOAITK = 1
	BEGIN
		IF EXISTS (
			SELECT 1
			FROM KHACHHANG
			WHERE SDT = @SDT
		)
		BEGIN
			IF @MATKHAU = (
				SELECT MATKHAU
				FROM KHACHHANG
				WHERE SDT = @SDT
			)
			BEGIN
				SELECT @ID = MAKH, @HOTEN = HOTEN
				FROM KHACHHANG
				WHERE SDT = @SDT
				PRINT N'Đăng nhập thành công'
				SET @LOAINV = 0
				RETURN
			END
		END
	END
	ELSE IF @LOAITK = 2
	BEGIN
		IF EXISTS (
			SELECT 1
			FROM NHASI
			WHERE SDT = @SDT
		)
		BEGIN
			IF @MATKHAU = (
				SELECT MATKHAU
				FROM NHASI
				WHERE SDT = @SDT
			)
			BEGIN
				SELECT @ID = MANS, @HOTEN = HOTEN
				FROM NHASI
				WHERE SDT = @SDT
				PRINT N'Đăng nhập thành công'
				SET @LOAINV = 0
				RETURN
			END
		END
	END
	ELSE IF @LOAITK = 3
	BEGIN
		IF EXISTS (
			SELECT 1
			FROM NVNGHIEPVU
			WHERE SDT = @SDT
		)
		BEGIN
			IF @MATKHAU = (
				SELECT MATKHAU
				FROM NVNGHIEPVU
				WHERE SDT = @SDT
			)
			BEGIN
				SELECT @ID = MANV, @HOTEN = HOTEN, @LOAINV = LOAINV
				FROM NVNGHIEPVU
				WHERE SDT = @SDT
				PRINT N'Đăng nhập thành công'
				RETURN
			END
		END
	END
	BEGIN
		RAISERROR('Số điện thoại hoặc mật khẩu không chính xác', 16, 1)
	END
END
GO

-- REGISTER
CREATE OR ALTER PROC SP_REGISTER_KHACHHANG
	@HOTEN NVARCHAR(255),
	@SDT CHAR(10),
	@EMAIL VARCHAR(50),
	@MATKHAU VARCHAR(50)
AS
BEGIN
	IF LEN(@MATKHAU) < 8
	BEGIN
		RAISERROR('Mật khẩu phải dài tối thiếu 8 kí tự', 16, 1)
		RETURN
	END
	BEGIN TRY
		INSERT INTO KHACHHANG VALUES(@HOTEN, @SDT, @EMAIL, @MATKHAU)
	END TRY
	BEGIN CATCH
		DECLARE @ErrorMessage NVARCHAR(MAX) = ERROR_MESSAGE();
		IF CHARINDEX('UQ__KHACHHAN__161CF724BA5D8E92', @ErrorMessage) > 0
		BEGIN
			RAISERROR('Email này đã được đăng ký!', 16, 1)
		END
		ELSE IF CHARINDEX('UQ__KHACHHAN__CA1930A58665C3EE', @ErrorMessage) > 0
		BEGIN
			RAISERROR('Số điện thoại này đã được đăng ký!', 16, 1)
		END
		RETURN
	END CATCH
END
GO

-- CREATE HSBN
CREATE OR ALTER PROC SP_CREATE_HSBN
	@MAKH INT = NULL,
	@HOTENBN NVARCHAR(255),
	@NGAYSINH DATE,
	@GIOITINH NVARCHAR(10),
	@SDTBN CHAR(10),
	@DIACHIBN NVARCHAR(255),
	@TTSUCKHOE NVARCHAR(255),
	@TTDIUNG NVARCHAR(255)
AS
BEGIN
	BEGIN TRY
		INSERT INTO HOSOBN VALUES(@MAKH, @HOTENBN, @NGAYSINH, @GIOITINH, @SDTBN, @DIACHIBN, 0, 0, @TTSUCKHOE, @TTDIUNG)
	END TRY
	BEGIN CATCH
		RAISERROR('Lỗi hệ thống hoặc lỗi khoá ngoại!', 16, 1)
	END CATCH
END
GO

-- GET HSBN DATATABLE
CREATE OR ALTER PROC SP_GET_DATATABLE_HSBN
	@FILTERQUERY NVARCHAR(MAX),
	@COLNAME NVARCHAR(MAX),
	@COLSORTORDER NVARCHAR(MAX),
	@OFFSET_START NVARCHAR(MAX),
	@LENGTH NVARCHAR(MAX)
AS
BEGIN
	DECLARE @SQL NVARCHAR(MAX) = N'SELECT COUNT(*) recordsTotal FROM HOSOBN '
	EXEC SP_EXECUTESQL @SQL
	
	SET @SQL = @SQL + @FILTERQUERY
	EXEC SP_EXECUTESQL @SQL

	SET @SQL = 'SELECT * FROM HOSOBN ' + @FILTERQUERY +
                    ' ORDER BY ' + @COLNAME + ' ' + @COLSORTORDER +
                    ' OFFSET ' + @OFFSET_START + ' ROWS FETCH NEXT ' + @LENGTH + ' ROWS ONLY;';
	EXEC SP_EXECUTESQL @SQL
END
GO

-- UPDATE HSBN
CREATE OR ALTER PROC SP_UPDATE_HSBN
	@MAHSBN INT,
	@HOTENBN NVARCHAR(255),
	@NGAYSINH DATE,
	@GIOITINH NVARCHAR(10),
	@SDTBN CHAR(10),
	@DIACHIBN NVARCHAR(255),
	@TTSUCKHOE NVARCHAR(255),
	@TTDIUNG NVARCHAR(255)
AS
BEGIN
	BEGIN TRY
		UPDATE HOSOBN
		SET
			HOTENBN = @HOTENBN,
			NGAYSINH = @NGAYSINH,
			GIOITINH = @GIOITINH,
			SDTBN = @SDTBN,
			DIACHIBN = @DIACHIBN,
			TTSUCKHOE = @TTDIUNG,
			TTDIUNG = @TTDIUNG
		WHERE MAHSBN = @MAHSBN

		UPDATE LICHHEN
		SET
			HOTENBN = @HOTENBN,
			SDTBN = @SDTBN
		WHERE MAHSBN = @MAHSBN

		UPDATE KHDIEUTRI
		SET
			HOTENBN = @HOTENBN
		WHERE MAHSBN = @MAHSBN

	END TRY
	BEGIN CATCH
		DECLARE @ErrorMessage NVARCHAR(MAX) = ERROR_MESSAGE();
		RAISERROR(@ErrorMessage, 16, 1)
	END CATCH
END
GO

-- SEARCH FOR HSBN 
CREATE OR ALTER PROC SP_SEARCH_HSBN_KEYWORD
	@MAKH INT,
	@KEYWORD NVARCHAR(MAX)
AS
BEGIN
	SET @KEYWORD = @KEYWORD + '%'
	DECLARE @KEYWORD2 NVARCHAR(MAX) = '%' + @KEYWORD
	IF (@MAKH IS NULL)
	BEGIN
		SELECT TOP 10 MAHSBN, HOTENBN, SDTBN
		FROM HOSOBN
		WHERE
			CONVERT(NVARCHAR(MAX), MAHSBN) LIKE @KEYWORD OR
			HOTENBN LIKE @KEYWORD2 OR
			SDTBN LIKE @KEYWORD
		RETURN
	END

	SELECT TOP 10 MAHSBN, HOTENBN, SDTBN
	FROM HOSOBN
	WHERE MAKH = @MAKH AND
		(CONVERT(NVARCHAR(MAX), MAHSBN) LIKE @KEYWORD OR
		HOTENBN LIKE @KEYWORD2 OR
		SDTBN LIKE @KEYWORD)
END
GO

-- SEARCH FOR CHINHANH DATALIST
CREATE OR ALTER PROC SP_SEARCH_CHINHANH_KEYWORD
	@KEYWORD NVARCHAR(MAX)
AS
BEGIN
	SET @KEYWORD = @KEYWORD + '%'
	DECLARE @KEYWORD2 NVARCHAR(MAX) = '%' + @KEYWORD
	SELECT TOP 10 *
	FROM CHINHANH
	WHERE
		CONVERT(NVARCHAR(MAX), MACN) LIKE @KEYWORD OR
		TENCN LIKE @KEYWORD2 OR
		DIACHICN LIKE @KEYWORD2 OR
		SDTCN LIKE @KEYWORD
END
GO

-- SEARCH FOR NHASI DATALIST
CREATE OR ALTER PROC SP_SEARCH_NHASI_KEYWORD
	@MACN INT,
	@KEYWORD NVARCHAR(MAX)
AS
BEGIN
	SET @KEYWORD = @KEYWORD + '%'
	DECLARE @KEYWORD2 NVARCHAR(MAX) = '%' + @KEYWORD
	SELECT TOP 10 MANS, HOTEN
	FROM NHASI
	WHERE MACN = @MACN AND 
		(CONVERT(NVARCHAR(MAX), MANS) LIKE @KEYWORD OR
		HOTEN LIKE @KEYWORD2)
END
GO



-- BOOK APPOINMENT
CREATE OR ALTER PROC SP_BOOK_APPOINMENT
	@MACN INT,
	@MANS INT,
	@MAHSBN INT,
	@HOTENBN NVARCHAR(255),
	@SDTBN CHAR(10),
	@HOTENNS NVARCHAR(255),
	@NGAYHEN DATE,
	@GIOHENSTR VARCHAR(10),
	@MATAIKHAM INT
AS
BEGIN
	DECLARE @DAYWEEK INT = DATEPART(WEEKDAY, @NGAYHEN)
	DECLARE @GIOHEN TIME = CONVERT(TIME, @GIOHENSTR)

	IF (@MANS IS NOT NULL)
	BEGIN 
		-----------------------------
		DECLARE @CHECKGIOHEN BIT = 0

		SELECT @CHECKGIOHEN = 1
		FROM LICHLAMVIEC
		WHERE MANS = @MANS
		AND NGAYLAM = @DAYWEEK
		AND @GIOHEN BETWEEN GIOBATDAU AND GIOKETTHUC

		IF (@CHECKGIOHEN = 0)
		BEGIN
			RAISERROR('Nha sĩ trên hiện không làm việc vào thời gian này!', 16, 1)
			RETURN
		END

		-----------------------------
		DECLARE @CHECKNGAYHEN BIT = 1
	
		SELECT @CHECKNGAYHEN = 0
		FROM LICHNGHI
		WHERE MANS = @MANS
		AND NGAYNGHI = @NGAYHEN

		IF (@CHECKNGAYHEN = 0)
		BEGIN
			RAISERROR('Nha sĩ trên hiện không làm việc vào ngày này!', 16, 1)
			RETURN
		END

		-----------------------------
		DECLARE @AVAILABLE BIT = 1

		SELECT @AVAILABLE = 0
		FROM LICHHEN
		WHERE MANS = @MANS 
		AND NGAYHEN = @NGAYHEN AND GIOHEN = @GIOHEN

		IF (@AVAILABLE = 0)
		BEGIN
			RAISERROR('Nha sĩ đã có lịch hẹn khác vào thời điểm này!', 16, 1)
			RETURN
		END

		SELECT @AVAILABLE = 0
		FROM LICHHEN
		WHERE MAHSBN = @MAHSBN
		AND NGAYHEN = @NGAYHEN AND GIOHEN = @GIOHEN

		IF (@AVAILABLE = 0)
		BEGIN
			RAISERROR('Hồ sơ bệnh nhân đã có lịch hẹn khác vào thời điểm này!', 16, 1)
			RETURN
		END

		-----------------------------------------
		INSERT INTO LICHHEN VALUES (@MANS, @MAHSBN, @HOTENBN, @SDTBN, @HOTENNS, @NGAYHEN, @GIOHEN, 0, @MATAIKHAM)
		
	END
	ELSE
	BEGIN
		SELECT TOP 1
			@MANS = NS.MANS,
			@HOTENNS = NS.HOTEN
		FROM
			NHASI NS
		JOIN
			LICHLAMVIEC LLV ON NS.MANS = LLV.MANS
		LEFT JOIN
			LICHHEN LH ON (LH.MANS = NS.MANS OR LH.MAHSBN = @MAHSBN)
						AND LH.NGAYHEN = @NGAYHEN
						AND LH.GIOHEN = @GIOHEN
		WHERE
			NS.MACN = @MACN
			AND NOT EXISTS (
				SELECT 1
				FROM LICHNGHI LN
				WHERE LN.MANS = NS.MANS
				AND LN.NGAYNGHI = @NGAYHEN
			)
			AND LLV.NGAYLAM = @DAYWEEK -- Clustered Index Scan
			AND @GIOHEN BETWEEN LLV.GIOBATDAU AND LLV.GIOKETTHUC -- Clustered Index Scan
			AND LH.MANS IS NULL -- Clustered Index Scan
			
		IF (@MANS IS NOT NULL)
		BEGIN
			INSERT INTO LICHHEN VALUES (@MANS, @MAHSBN, @HOTENBN, @SDTBN, @HOTENNS, @NGAYHEN, @GIOHEN, 0, @MATAIKHAM)
		END
		ELSE
		BEGIN
			RAISERROR('Hiện không có nha sĩ nào rảnh vào thời gian này!', 16, 1)
			RETURN
		END
	END
END
GO

--GET REPORT CARD FOR HOMEPAGE
CREATE OR ALTER PROC SP_GET_REPORT_CARD_KH
	@MAKH INT
AS
BEGIN
	----- Tạo bảng dữ liệu tạm chứa các mã hồ sơ bệnh nhân của khách hàng
	DECLARE @TODAY DATE = GETDATE()
	CREATE TABLE #HSBN (
		MAHSBN INT
	)

	INSERT INTO #HSBN (MAHSBN)
	SELECT MAHSBN
	FROM HOSOBN
	WHERE MAKH = @MAKH

	-- Số cuộc hẹn sắp tới
	DECLARE @CARD1 INT
	SELECT @CARD1 = COUNT(*)
	FROM LICHHEN LH
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN HSBN
		WHERE HSBN.MAHSBN = LH.MAHSBN
	)
	AND LH.XACNHAN = 1
	AND LH.NGAYHEN >= @TODAY

	--Số cuộc hẹn đã hoàn thành
	DECLARE @CARD2 INT
	SELECT @CARD2 = COUNT(*)
	FROM LICHHEN LH
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN HSBN
		WHERE HSBN.MAHSBN = LH.MAHSBN
	)
	AND LH.XACNHAN = 1
	AND LH.NGAYHEN < @TODAY


	--Số kế hoạch điều trị sắp tới
	DECLARE @CARD3 INT
	SELECT @CARD3 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN HSBN
		WHERE HSBN.MAHSBN = KH.MAHSBN
	)
	AND KH.TRANGTHAI = 1

	--Số kế hoạch điều trị đã hoàn thành
	DECLARE @CARD4 INT
	SELECT @CARD4 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN HSBN
		WHERE HSBN.MAHSBN = KH.MAHSBN
	)
	AND KH.TRANGTHAI = 2
	
	--Tổng tiền điều trị
	DECLARE @CARD5 INT
	SELECT @CARD5 = SUM(HSBN.TONGTIENDIEUTRI)
	FROM HOSOBN HSBN
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN TMP
		WHERE TMP.MAHSBN = HSBN.MAHSBN
	)

	--Số tiền đã thanh toán
	DECLARE @CARD6 INT
	SELECT @CARD6 = SUM(HSBN.DATHANHTOAN)
	FROM HOSOBN HSBN
	WHERE EXISTS (
		SELECT 1
		FROM #HSBN TMP
		WHERE TMP.MAHSBN = HSBN.MAHSBN
	)

	--Số nha sĩ trên hệ thống
	DECLARE @CARD7 INT
	SELECT @CARD7 = COUNT(*)
	FROM NHASI

	--Số hồ sơ bệnh nhân của bản thân
	DECLARE @CARD8 INT
	SELECT @CARD8 = COUNT(*)
	FROM #HSBN

	SELECT @CARD1 C1, @CARD2 C2, @CARD3 C3, @CARD4 C4, @CARD5 C5, @CARD6 C6, @CARD7 C7, @CARD8 C8
END
GO

CREATE OR ALTER PROC SP_GET_REPORT_CARD_NS
	@MANS INT
AS
BEGIN
	DECLARE @TODAY DATE = GETDATE()

	--Số cuộc hẹn trong ngày hôm nay
	DECLARE @CARD1 INT
	SELECT @CARD1 = COUNT(*)
	FROM LICHHEN LH
	WHERE LH.MANS = @MANS
	AND LH.XACNHAN = 1
	AND LH.NGAYHEN = @TODAY

	--Số cuộc hẹn đã hoàn thành
	DECLARE @CARD2 INT
	SELECT @CARD2 = COUNT(*)
	FROM LICHHEN LH
	WHERE LH.MANS = @MANS
	AND LH.XACNHAN = 1
	AND LH.NGAYHEN < @TODAY


	--Số kế hoạch điều trị trong ngày hôm nay
	DECLARE @CARD3 INT
	SELECT @CARD3 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE (KH.KHAMCHINH = @MANS OR KH.TROKHAM = @MANS)
	AND KH.NGAYDIEUTRI = @TODAY
	AND KH.TRANGTHAI = 1

	--Số kế hoạch điều trị đã hoàn thành
	DECLARE @CARD4 INT
	SELECT @CARD4 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE (KH.KHAMCHINH = @MANS OR KH.TROKHAM = @MANS)
	AND KH.TRANGTHAI = 2

	SELECT @CARD1 C1, @CARD2 C2, @CARD3 C3, @CARD4 C4, null C5, null C6, null C7, null C8
END
GO

CREATE OR ALTER PROC SP_GET_REPORT_CARD_NV
	@MANV INT
AS
BEGIN
	DECLARE @TODAY DATE = GETDATE()
	DECLARE @BOM DATE = DATEADD(dd, -(DAY(@TODAY)), @TODAY)
	DECLARE @EOM DATE = EOMONTH(@TODAY)

	--Số cuộc hẹn trong ngày hôm nay
	DECLARE @CARD1 INT = NULL
	SELECT @CARD1 = COUNT(*)
	FROM LICHHEN LH
	WHERE LH.XACNHAN = 1
	AND LH.NGAYHEN = @TODAY

	--Số cuộc hẹn đang chờ xác nhận
	DECLARE @CARD2 INT = NULL
	SELECT @CARD2 = COUNT(*)
	FROM LICHHEN LH
	WHERE LH.XACNHAN = 0
	AND LH.NGAYHEN >= @TODAY


	--Số kế hoạch điều trị trong ngày hôm nay
	DECLARE @CARD3 INT = NULL
	SELECT @CARD3 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE KH.NGAYDIEUTRI = @TODAY
	AND KH.TRANGTHAI = 1

	--Số kế hoạch điều trị đã hoàn thành
	DECLARE @CARD4 INT = NULL
	SELECT @CARD4 = COUNT(*)
	FROM KHDIEUTRI KH
	WHERE KH.TRANGTHAI = 2

	--Số tiền thu được trong hôm nay
	DECLARE @CARD5 BIGINT = NULL
	SELECT @CARD5 = SUM(CAST(HD.TONGTIENCANTT AS BIGINT))
	FROM HOADON HD
	WHERE HD.NGAYTT = @TODAY

	--Số tiền thu được trong tháng
	DECLARE @CARD6 BIGINT = NULL
	SELECT @CARD6 = SUM(CAST(HD.TONGTIENCANTT AS BIGINT))
	FROM HOADON HD
	WHERE HD.NGAYTT BETWEEN @BOM AND @EOM

	--Số nha sĩ trên hệ thống
	DECLARE @CARD7 INT = NULL
	SELECT @CARD7 = COUNT(*)
	FROM NHASI

	--Số hồ sơ bệnh nhân của hệ thống
	DECLARE @CARD8 INT = NULL
	SELECT @CARD8 = COUNT(*)
	FROM HOSOBN


	SELECT @CARD1 C1, @CARD2 C2, @CARD3 C3, @CARD4 C4, @CARD5 C5, @CARD6 C6, @CARD7 C7, @CARD8 C8
END
GO

-- SEARCH FOR NHASI IN LLV
CREATE OR ALTER PROC SP_SEARCH_NHASI_LLV
	@KEYWORD NVARCHAR(MAX)
AS
BEGIN
	SET @KEYWORD = @KEYWORD  + '%'
	DECLARE @KEYWORD2 NVARCHAR(MAX) = '%' + @KEYWORD
	SELECT TOP 10 MANS, HOTEN
	FROM NHASI
	WHERE 
		(CONVERT(VARCHAR(MAX), MANS) LIKE @KEYWORD OR
		HOTEN LIKE @KEYWORD2)
END
GO

-- GET LLV OF NHASI
CREATE OR ALTER PROC SP_GET_LLV_NHASI
	@MANS INT
AS
BEGIN
	SELECT NGAYLAM, DATEPART(HOUR, GIOBATDAU) BATDAU, DATEPART(HOUR, GIOKETTHUC) KETTHUC
	FROM LICHLAMVIEC
	WHERE MANS = @MANS
END
GO

-- UPDATE LICHLAMVIEC
--CREATE TYPE TMPLICHLAMVIEC AS TABLE (
--	MANS INT,
--	NGAYLAM INT,
--	GIOBATDAU VARCHAR(20),
--	GIOKETTHUC VARCHAR(20)
--)
--GO

CREATE OR ALTER PROC SP_UPDATE_LICHLAMVIEC
	@MANS INT,
	@NEWLLV TMPLICHLAMVIEC READONLY
AS
BEGIN
	BEGIN TRY
		BEGIN TRAN
		DELETE FROM LICHLAMVIEC
		WHERE MANS = @MANS

		INSERT INTO LICHLAMVIEC (MANS, NGAYLAM, GIOBATDAU, GIOKETTHUC)
		SELECT MANS, NGAYLAM, CONVERT(TIME, GIOBATDAU) AS GIOBATDAU, CONVERT(TIME, GIOKETTHUC) AS GIOKETTHUC
		FROM @NEWLLV
		COMMIT TRAN
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN

		DECLARE @ErrorMessage NVARCHAR(MAX) = ERROR_MESSAGE();
		IF CHARINDEX('CK_LICHLAMVIEC_GIOBATDAU', @ErrorMessage) > 0
		BEGIN
			RAISERROR('Giờ bắt đầu làm phải từ 8 giờ sáng!', 16, 1)
		END
		ELSE IF CHARINDEX('CK_LICHLAMVIEC_GIOKETTHUC', @ErrorMessage) > 0
		BEGIN
			RAISERROR('Giờ tan ca phải từ trước 20h!', 16, 1)
		END

	END CATCH
END
GO


-- GET WEEKLY MODE LLV
CREATE OR ALTER PROC SP_GET_LLV_WEEKLY
	@MANS INT,
	@STARTDATE DATE,
	@ENDDATE DATE
AS
BEGIN
	WITH CONVERTEDDATE (NGAYNGHI) AS
	(
		SELECT DATEPART(WEEKDAY, LN.NGAYNGHI) NGAYNGHI
		FROM LICHNGHI LN
		WHERE LN.MANS = @MANS 
		AND @STARTDATE <= LN.NGAYNGHI AND LN.NGAYNGHI <= @ENDDATE
	)

	SELECT LLV.NGAYLAM, DATEPART(HOUR, GIOBATDAU) BATDAU, DATEPART(HOUR, GIOKETTHUC) KETTHUC
	FROM LICHLAMVIEC AS LLV
	LEFT JOIN CONVERTEDDATE LN ON LLV.NGAYLAM = LN.NGAYNGHI
	WHERE LLV.MANS = @MANS
	AND LN.NGAYNGHI IS NULL;
END
GO

-- GET MONTHLY MODE LLV
CREATE OR ALTER PROC SP_GET_LLV_MONTHLY
	@MANS INT,
	@STARTDATE DATE,
	@ENDDATE DATE
AS
BEGIN
	DECLARE @MONTH INT = MONTH(@STARTDATE)
	DECLARE @YEAR INT = YEAR(@STARTDATE);

	WITH NUMBERS (VAL) AS
	(
		SELECT 1 AS VAL
		UNION ALL
		SELECT VAL + 1 FROM NUMBERS
		WHERE VAL + 1 <= DAY(EOMONTH(DATEFROMPARTS(@YEAR,@MONTH,1)))
	),
	CONVERTEDDATE (NGAY) AS
	(
		SELECT DATEFROMPARTS(@YEAR,@MONTH,NUMBERS.VAL) AS NGAY
		FROM NUMBERS
	),
	CONVERTEDLICHNGHI (NGAY) AS
	(
		SELECT NGAYNGHI NGAY
		FROM LICHNGHI LN
		WHERE LN.MANS = @MANS 
		AND @STARTDATE <= LN.NGAYNGHI AND LN.NGAYNGHI <= @ENDDATE
	),
	CONVERTEDLICHLAM (NGAY) AS
	(
		SELECT CD.NGAY
		FROM CONVERTEDDATE CD
		LEFT JOIN CONVERTEDLICHNGHI CLN ON CD.NGAY = CLN.NGAY
		WHERE CLN.NGAY IS NULL
	)
	SELECT DATEPART(DAY, CV.NGAY) NGAYLAM, DATEPART(HOUR, GIOBATDAU) BATDAU, DATEPART(HOUR, GIOKETTHUC) KETTHUC
	FROM LICHLAMVIEC AS LLV
	JOIN CONVERTEDLICHLAM CV ON LLV.NGAYLAM = DATEPART(WEEKDAY, CV.NGAY)
	WHERE LLV.MANS = @MANS
END
GO

-- ADD NGAYNGHI
CREATE OR ALTER PROC SP_ADD_NGAYNGHI
	@MANS INT,
	@NGAYNGHI DATE
AS
BEGIN
	BEGIN TRY
		INSERT INTO LICHNGHI VALUES (@MANS, @NGAYNGHI)
	END TRY
	BEGIN CATCH
		RAISERROR('Nha sĩ đã được cho phép nghỉ ngày này rồi.', 16, 1)
	END CATCH
END
GO

-- CREATE TAI KHAM
CREATE OR ALTER PROC SP_GET_TAIKHAM_INFO
	@MAHSBN INT,
	@MANS INT
AS
BEGIN
	SELECT MAHSBN, HOTENBN, SDTBN
	FROM HOSOBN
	WHERE MAHSBN = @MAHSBN

	SELECT MANS, HOTEN
	FROM NHASI
	WHERE MANS = @MANS
END
GO
